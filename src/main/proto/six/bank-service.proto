syntax = "proto3";

import "google/protobuf/empty.proto";

package six;

option java_multiple_files = true;
option java_package = "com.learn.grpc.six";

message BalanceRequest{
  int32 account_number = 1;
}

message AccountBalance{
  int32 accountNumber = 1;
  int32 balance = 2;
}

message AllAccountResponse{
  repeated AccountBalance accounts = 1;
}

message WithDrawRequest{
  int32 account_number = 1;
  int32 amount = 2;
}

message Money{
  int32 amount = 1;
}

message DepositeRequest{
  oneof request{
    int32 AccountNumber = 1;
    Money money = 2;
  }
}

message TransferRequest{
    int32 fromAccount = 1;
    int32 toAccount = 2;
    int32 amount = 3;
}

enum TransferStatus{
  REJECTED = 0;
  COMPLETED = 1;
}

message TransferResponse{
  TransferStatus transferStatus = 1;
  AccountBalance fromAccount = 2;
  AccountBalance toAccount = 3;
}
/*
In parameter we can't able to pass the scalar types
only object can be passed
Without parameter we can't able to create the service method, so use the Empty proto provided by google
*/

service BankService{

  // unary
  rpc GetAccountBalance(BalanceRequest) returns (AccountBalance); // while generating the source code the method name will be convert to java standard
  rpc GetAllAccount(google.protobuf.Empty) returns (AllAccountResponse);

  // server streaming
  rpc withDraw(WithDrawRequest) returns (stream Money);

  // client streaming
  rpc DepositAmount(stream DepositeRequest) returns (AccountBalance);
}

service TransferService{
  rpc transfer(stream TransferRequest) returns (stream TransferResponse);
}